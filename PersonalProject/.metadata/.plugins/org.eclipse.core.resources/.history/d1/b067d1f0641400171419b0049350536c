package JavaToUML;

import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import com.github.javaparser.JavaParser;
import com.github.javaparser.ast.CompilationUnit;

public class Parser {

	private static ArrayList<File> JavaFiles = new ArrayList<File>();

	private static ArrayList<String> ClassNames = new ArrayList<String>();

	private static ArrayList<String> InterfaceNames = new ArrayList<String>();

	private static ArrayList<String> UMLsource = new ArrayList<String>();

	public static void main(String[] args) throws Exception{
		String path = "C:\\Users\\Pavana\\workspace1\\text\\src\\text";

		File inputFile = new File(path);
		if(inputFile.isDirectory()){
			DirExplorer dir_explorer = new DirExplorer(inputFile);

			JavaFiles = dir_explorer.listFiles();
		}
		else 
		{
			JavaFiles.add(inputFile);
		}

		//System.out.print(JavaFiles);

		UMLsource.add("@Startuml");
		for(int i=0; i<JavaFiles.size();i++){
			File file = new File(JavaFiles.get(i).getAbsolutePath());
			FileInputStream file_in = null;
			CompilationUnit compile_unit = null;
			try{
				file_in = new FileInputStream(file);
				compile_unit = JavaParser.parse(file_in);				
			}
			catch(Exception e){
				e.printStackTrace();
			}
			finally{
				file_in.close();
			}

			ClassOrInterfaceVisitor class_interface_visitor = new ClassOrInterfaceVisitor();

			class_interface_visitor.visit(compile_unit,null);

			if(class_interface_visitor.IsClass()){
				String classname = class_interface_visitor.getClassName();
				ClassNames.add(classname);
				UMLsource.add("class "+classname+"{");
			}

			else if(class_interface_visitor.IsInterface()){
				String interfacename = class_interface_visitor.getInterfaceName();
				InterfaceNames.add(interfacename);
				UMLsource.add("interface "+interfacename+"{");

			}
			
			UMLsource.add("}");
		}
		
		UMLsource.add("@enduml");
		
		System.out.println(UMLsource+"\n");

		//System.out.print("Classes:"+ClassNames+"\n");
	//	System.out.print("Interfaces:"+InterfaceNames+"\n");
	}
}








